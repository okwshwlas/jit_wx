package dogo.controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpRequest;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.alibaba.druid.sql.dialect.oracle.ast.clause.SubqueryFactoringClause.Entry;
import com.alibaba.fastjson.JSON;

import dogo.model.CrjPaylog;
import dogo.model.CrjYyxx;
import dogo.model.Gongzhong;
import dogo.model.SysWorktime;
import dogo.model.Wx_Pc;
import dogo.modeljson.AjaxJson;
import dogo.modeljson.BaseJson;
import dogo.modeljson.JsonDateValueProcessor;
import dogo.service.CrjRyjbxxServiceI;
import dogo.service.CrjWxQzPayServiceImpl;
import dogo.service.CrjWxQzPayServicel;
import dogo.service.GongzhongZhanghaoService;
import dogo.util.DataUtils;
import dogo.util.HttpClientUtil;
import dogo.util.Params;
import dogo.util.SmsUtils;
import dogo.util.StringUtils;
import dogo.util.UUID;
import dogo.weixin.core.WeiXinUtil;
import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;
import sun.misc.BASE64Decoder;


@Controller
@RequestMapping("/crj/wxsfzf")
public class Wxsfzf {
	  private static final Logger log = Logger.getLogger(Wxsfzf.class);

	  @Autowired
	  private CrjRyjbxxServiceI crjRyjbxxServiceI;
		@Autowired
	  private CrjWxQzPayServicel crjWxQzPayServiceI;
	  
	  public CrjWxQzPayServicel getCrjWxQzPayServiceI() {
			return crjWxQzPayServiceI;
		}

		public void setCrjWxQzPayServiceI(CrjWxQzPayServicel crjWxQzPayServiceI) {
			this.crjWxQzPayServiceI = crjWxQzPayServiceI;
		}


	  @Autowired
	  private GongzhongZhanghaoService gongzhongZhanghaoService;
	  
	 @RequestMapping(value={"/end.do"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
	  public void addYuYueByWorktime(HttpServletResponse response, HttpServletRequest request)
	    throws IOException
	  {
		String type =request.getParameter("xxcome");
		String openid = request.getParameter("openid");
	    AjaxJson ajaxJson = new AjaxJson();
	    String ret = "";
	    response.setCharacterEncoding("UTF-8");
	    response.setContentType("text/html");
	    PrintWriter out = response.getWriter();

	    BaseJson baseJson = new BaseJson();
	    
	    String endywxx =request.getParameter("endywxx");
	    String dwxx ="请将:"+endywxx+"填写到邮封备注栏中,并根据代理单位信息填写邮寄信息"+request.getParameter("dwxx");
	    String ywbh = "";
	    String yysjfw = "";
	    String shijian = "";
	    String Strid = Params.getCode();
	    try {
	    	  
	    	  
//	    	"dwxx" :dwxx,
//			"endywxx":endywxx 
	    	  

	      SimpleDateFormat dateFormater = new SimpleDateFormat("yyyy-MM-dd");
	      Date date = new Date();
//	      Wx_Pc pc = new Wx_Pc();
//	      pc.setOpenid(openid);
//	      pc.setYywd(jgdwName);
//	      pc.setYywddz(jgdwywdwdz);
//	      pc.setYybhs(Strid);
//	      pc.setDhhm(yysjfw);
//	      pc.setYysj(dateFormater.format(date));
	      shijian =dateFormater.format(date);
//	      this.crjRyjbxxServiceI.insertSelective(pc);
	      Gongzhong gongzhong = this.gongzhongZhanghaoService.selectGongzhongZhanghaoById("1");
	      String appid = gongzhong.getAccountAppid();
	      String appsecret = gongzhong.getAccountAppsecret();
	      WeiXinUtil util = new WeiXinUtil();

	      if ((type != null) && ("2".equals(type))) {
	        String token = util.getAccess_token(appid, appsecret);
	        String params = "{\"touser\":\"" + openid + "\",\"template_id\":\"h31AWXFqF0k3xxVLAbSjR6idAZpxQCWI90DwaINSqqU\",\"url\":\"\",\"topcolor\":\"#FF0000\",\"data\":{" + 
	          "\"first\": {\"value\":\"尊敬的客户，您的业务已受理成功！\",\"color\":\"#173177\"},\"keyword1\":{ \"value\":\"" + endywxx + "\", \"color\":\"#173177\" },\"keyword2\": {\"value\":\"" + shijian + "\", \"color\"" + 
	          ":\"#173177\" },\"remark\":{\"value\":\"" + dwxx + "\",\"color\":\"#173177\"}}}";

	        boolean flag = util.createMobanMessage(params, token);

	        String params_csfw = "{\"touser\":\"" + openid + "\",\"template_id\":\"h31AWXFqF0k3xxVLAbSjR6idAZpxQCWI90DwaINSqqU\",\"url\":\"\",\"topcolor\":\"#FF0000\",\"data\":{" + 
	  	          "\"first\": {\"value\":\"尊敬的客户，您的业务已受理成功！\",\"color\":\"#173177\"},\"keyword1\":{ \"value\":\"" + endywxx + "\", \"color\":\"#173177\" },\"keyword2\": {\"value\":\"" + shijian + "\", \"color\"" + 
		          ":\"#173177\" },\"remark\":{\"value\":\"" + dwxx + "\",\"color\":\"#173177\"}}}";
	        String csfw = URLEncoder.encode(params_csfw, "UTF-8");
	        csfw = "https://city.weixin.qq.com/cgi-bin/entry?result_data=" + csfw + "#wechat_redirect";
	        baseJson.setData(csfw);
	        
	        JsonConfig jsonConfig = new JsonConfig();
	        jsonConfig.registerJsonValueProcessor(Date.class, new JsonDateValueProcessor());
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);

	        out = response.getWriter();
	        out.print(ret);
	      }
	      else {
	        String token = util.getAccess_token(appid, appsecret);
	        String params = "{\"first\":\"尊敬的客户，您的业务已受理成功！\",\"keyword1\":\"" + endywxx + "\",\"keyword2\":\"" + shijian + "\",\"keyword3\":\"" + shijian + "\",\"keyword4\":\"" + shijian + "\",\"remark\":\"" + dwxx + "\"}";
	        //boolean flag = util.createMobanMessage(params, token);
	        Wxsfzf wxqzController =new Wxsfzf();
			wxqzController.sendMbxx(openid,"1",params, request, response);
	        out = response.getWriter();
	        out.print(ret);
	      }
	    } catch (Exception e) {
	      log.error(e.getMessage(), e);
	      e.printStackTrace();
	      ajaxJson.setCode("000001");
	      ajaxJson.setMsg("预约失败！");
	      out.print(JSON.toJSONString(ajaxJson));
	    } finally {
	      out.flush();
	      out.close();
	    }
	  }
	 
	 @RequestMapping(value={"/savesfzf.do"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
	 public  void saveSfzf(HttpServletResponse response, HttpServletRequest request)
			    throws IOException{
		   AjaxJson ajaxJson = new AjaxJson();
		    String ret = "";
		    response.setCharacterEncoding("UTF-8");
		    response.setContentType("text/html");
		    PrintWriter out = response.getWriter();
		    BaseJson baseJson = new BaseJson();
		    String ywbh =request.getParameter("ywbh");
		    String returnString = "0009";
		    //type 标示是save 还是update操作
		    String type= request.getParameter("type");
		    String sql="";
			//设定数据库驱动，数据库连接地址、端口、名称，用户名，密码
				String driverName="oracle.jdbc.driver.OracleDriver";
				String url="jdbc:oracle:thin:@101.200.200.193:1521:ORCL";	//test为数据库名称，1521为连接数据库的默认端口
				String user="crj_user";	//aa为用户名
				String password="crj_user_2016";	//123为密码
				
				PreparedStatement pstmt = null;
				ResultSet rs = null;
				
				//数据库连接对象
				Connection conn = null;
				
				try {
					//反射Oracle数据库驱动程序类
					Class.forName(driverName);
					
					//获取数据库连接
					conn = DriverManager.getConnection(url, user, password);
					
					//输出数据库连接
					System.out.println(conn);
					
					//定制sql命令
					if("0".equals(type)){
						sql = "INSERT INTO  t_wx_smsf (ywbh,jyh,jylx,jyfs,in_date,stfje,data_type) VALUES ('"+ywbh+"','001','C','p','"+new Date()+"','0','1')";
                     }else{
                    	 
 						sql = "INSERT INTO  t_wx_smsf (ywbh,jyh,jylx,jyfs,in_date,stfje,data_type) VALUES ('"+ywbh+"','001','C','p','"+new Date()+"','0','1')";

                     }
					
					//创建该连接下的PreparedStatement对象
					pstmt = conn.prepareStatement(sql);
					
					//传递第一个参数值 root，代替第一个问号
//					pstmt.setString(1, "root");
					
					//执行查询语句，将数据保存到ResultSet对象中
					rs = pstmt.executeQuery();
					
					//将指针移到下一行，判断rs中是否有数据
					if(rs.next()){
						//输出查询结果
						System.out.println("查询到名为【" + rs.getString("id") + "】的信息，其密码为：" + rs.getString("id"));
					}else{
						//输出查询结果
						System.out.println("未查询到用户名为【" + rs.getString("id") + "】的信息");
					}
					returnString="0000";
					
				} catch (ClassNotFoundException e) {
					e.printStackTrace();
				} catch (SQLException e) {
					e.printStackTrace();
				}finally{
					try{
						if(rs != null){
							rs.close();
						}
						if(pstmt != null){
							pstmt.close();
						}
						if(conn != null){
							conn.close();
						}
					} catch (SQLException e) {
						e.printStackTrace();
					}	
				}
//		  return returnString;
		   baseJson.setData(returnString);
	        JsonConfig jsonConfig = new JsonConfig();
//	        jsonConfig.registerJsonValueProcessor(Date.class, new JsonDateValueProcessor());
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);
	        out = response.getWriter();
	        out.print(ret);
		 
		 
	 }
	 @RequestMapping(value={"/getTokenTime.do"}, method={org.springframework.web.bind.annotation.RequestMethod.GET})
	 public   void getTokenTime(HttpServletResponse response, HttpServletRequest request)
			    throws IOException{
		 String returnString = "";
		    String ret = "";
		    response.setCharacterEncoding("UTF-8");
		    response.setContentType("text/html");
		    PrintWriter out = response.getWriter();
		    BaseJson baseJson = new BaseJson();
		 try {
			 //String url="http://221.8.52.227/mc/api/console/token/ttl";
			 String url="http://192.168.2.114:80/mc/api/console/token/ttl";
//			 String param ="appId=\"100081\"&secrectKey=\"KbaHD6Rrs9DVr3mXs\"";
			 String data = request.getParameter("token");
//			 String data ="6a1279584b644382a69267d4f6670f20";
			 returnString =  HttpClientUtil.sendGet(url, data);
		} catch (Exception e) {
			// TODO: handle exception
//			System.out.println("222");
		}
		 baseJson.setData(returnString);
	        
	        JsonConfig jsonConfig = new JsonConfig();
//	        jsonConfig.registerJsonValueProcessor(Date.class, new JsonDateValueProcessor());
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);

	        out = response.getWriter();
	        out.print(ret);
		 
		 
		 
		 
	 }
	 @RequestMapping(value={"/getZhuCe.do"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
	 public  void getZhuCe(HttpServletResponse response, HttpServletRequest request)
			    throws IOException{
		    String ret = "";
		    response.setCharacterEncoding("UTF-8");
		    response.setContentType("text/html");
		    PrintWriter out = response.getWriter();
		    BaseJson baseJson = new BaseJson();
		 String returnString = "";
		 String token = request.getParameter("token");
		 String userName =request.getParameter("userName");
		 try {
			 String url="http://gaapi.jl.gov.cn/MicroService/api/v1/member/getmemberinfo";
//			 String param ="appId=\"100081\"&secrectKey=\"KbaHD6Rrs9DVr3mXs\"";
//			 String data = "{\"userName\":";
//			 data +="\"";
//			 data +=userName;
//			 data +="\"";
//			 data +="}";
			 String data = "userName="+userName;
			 System.out.println(data);
			 returnString =  HttpClientUtil.post(url,data,token);
		} catch (Exception e) {
			// TODO: handle exception
		}
		     baseJson.setData(returnString);
	        JsonConfig jsonConfig = new JsonConfig();
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);
	        out = response.getWriter();
	        out.print(ret);
		 
		 
	 }
	 
	 
	 @RequestMapping(value={"/sendMbxx.do"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
	 public  void sendMbxx(String opneid,String type,String parmas, HttpServletRequest request,HttpServletResponse response )
			    throws IOException{
		    String ret = "";
		    response.setCharacterEncoding("UTF-8");
		    response.setContentType("text/html");
		    PrintWriter out = response.getWriter();
		    BaseJson baseJson = new BaseJson();
		    String returnString="";
		    //外网测试
//		    String tokenurl=" http://221.8.52.227/mc/api/console/token";
		    //内网ip
		    String tokenurl=" http://192.168.2.114:80/mc/api/console/token";
//			 String param ="appId=\"100081\"&secrectKey=\"KbaHD6Rrs9DVr3mXs\"";
			 String tokendata = "{\"appId\":\"100081\",\"secrectKey\":\"KbaHD6Rrs9DVr3mX\"}";
			 String token =  HttpClientUtil.getFeiInfo(tokenurl, tokendata);
			 token =  (String) JSON.parseObject(token).get("data");
			
		 try {
			 String url="http://gaapi.jl.gov.cn/MicroService/api/v1/wxsms/send";
//			 String param ="appId=\"100081\"&secrectKey=\"KbaHD6Rrs9DVr3mXs\"";
			 String data = "{\"openid\":\"";
			 data +=opneid;
			 data +="\",";
			 data +="\"type\":\"";
			 data += type;
			 data +="\",";
			 data +="\"param\":";
			 data +=parmas;
			 data +="}";
//			 String data = "opneid="+opneid+"&type="+type+"&param="+parmas;
			 returnString =  HttpClientUtil.mbpost(url,data,token);
		} catch (Exception e) {
			// TODO: handle exception
		}
		     baseJson.setData(returnString);
	        JsonConfig jsonConfig = new JsonConfig();
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);
	        out = response.getWriter();
	        out.print(ret);
		 
		 
	 }
	 
	 
	 
	 @RequestMapping(value={"/zhuCeSave.do"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
	 public  void zhuCeSave(HttpServletResponse response, HttpServletRequest request)
			    throws IOException{
		    String ret = "";
		    response.setCharacterEncoding("UTF-8");
		    response.setContentType("text/html");
		    PrintWriter out = response.getWriter();
		    BaseJson baseJson = new BaseJson();
		 String returnString = "";
		 String token = request.getParameter("token");
		 String mobile =request.getParameter("mobile");
		 String userType =request.getParameter("userType");
		 String passwd =request.getParameter("passwd");
		 String src =request.getParameter("src");
		 try {
			 String url="http://gaapi.jl.gov.cn/MicroService/api/v1/member/memberregister";
//			 String param ="appId=\"100081\"&secrectKey=\"KbaHD6Rrs9DVr3mXs\"";
//			 String data = "{\"userName\":";
//			 data +="\"";
//			 data +=userName;
//			 data +="\"";
//			 data +="}";
			 String data = "";
			 data +="mobile="+mobile;
			 data += "&userType="+userType;
			 data += "&passwd="+passwd;
			 data += "&src="+src;
			 System.out.println(data);
			 returnString =  HttpClientUtil.post(url,data,token);
		} catch (Exception e) {
			// TODO: handle exception
		}
		     baseJson.setData(returnString);
	        JsonConfig jsonConfig = new JsonConfig();
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);
	        System.out.println(returnString);
	        out = response.getWriter();
	        out.print(ret);
		 
		 
	 }
	 
	 
	 @RequestMapping(value={"/smrzSave.do"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
	 public  void smrzSave(HttpServletResponse response, HttpServletRequest request)
			    throws IOException{
		    String ret = "";
		    response.setCharacterEncoding("UTF-8");
		    response.setContentType("text/html");
		    PrintWriter out = response.getWriter();
		    BaseJson baseJson = new BaseJson();
		 String returnString = "";
		 String token = request.getParameter("token");
		 String gmsfhm =request.getParameter("gmsfhm");
		 String xm =request.getParameter("xm");
		 String guid =request.getParameter("guid");
		 try {
			 String url="http://gaapi.jl.gov.cn/MicroService/api/v1/member/memberinforz";
			 String data = "";
			 data +="userguid="+guid;
			 data += "&gmsfhm="+gmsfhm;
			 data += "&xm="+xm;
			 returnString =  HttpClientUtil.post(url,data,token);
		} catch (Exception e) {
			// TODO: handle exception
		}
		     baseJson.setData(returnString);
	        JsonConfig jsonConfig = new JsonConfig();
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);
	        out = response.getWriter();
	        out.print(ret);
		 
		 
	 }
	 
	 @RequestMapping(value={"/getzhucexx.do"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
	 public  void getzhucexx(HttpServletResponse response, HttpServletRequest request)
			    throws IOException{
		    String ret = "";
		    response.setCharacterEncoding("UTF-8");
		    response.setContentType("text/html");
		    PrintWriter out = response.getWriter();
		    BaseJson baseJson = new BaseJson();
		 String returnString = "";
		 String token = request.getParameter("token");
		 String gmsfhm =request.getParameter("gmsfhm");
		 String xm =request.getParameter("xm");
		 String guid =request.getParameter("guid");
		 try {
			 String url="http://gaapi.jl.gov.cn/MicroService/api/v1/member/memberinforz";
			 String data = "";
			 data +="userguid="+guid;
			 data += "&gmsfhm="+gmsfhm;
			 data += "&xm="+xm;
			 returnString =  HttpClientUtil.post(url,data,token);
		} catch (Exception e) {
			// TODO: handle exception
		}
		     baseJson.setData(returnString);
	        JsonConfig jsonConfig = new JsonConfig();
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);
	        out = response.getWriter();
	        out.print(ret);
		 
		 
	 }
	 
	 
	 @RequestMapping(value={"/findRzResult.do"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
	 public   void findRzResult(HttpServletResponse response, HttpServletRequest request)
			    throws IOException{
		 String returnString = "";
		    String ret = "";
		    response.setCharacterEncoding("UTF-8");
		    response.setContentType("text/html");
		    PrintWriter out = response.getWriter();
		    BaseJson baseJson = new BaseJson();
		 try {
			 String sn = request.getParameter("sn");
			 String url="http://gaapi.jl.gov.cn/MicroService/api/v1/member/memberinforzquery?sn="+sn;
//			 String param ="appId=\"100081\"&secrectKey=\"KbaHD6Rrs9DVr3mXs\"";
			 
			 String token = request.getParameter("token");
//			 String data ="6a1279584b644382a69267d4f6670f20";
//			 String param = request.getParameter("sn");
			 returnString =  HttpClientUtil.sendGetToken(url, "",token);
		} catch (Exception e) {
			// TODO: handle exception
//			System.out.println("222");
		}
		 baseJson.setData(returnString);
	        
	        JsonConfig jsonConfig = new JsonConfig();
//	        jsonConfig.registerJsonValueProcessor(Date.class, new JsonDateValueProcessor());
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);

	        out = response.getWriter();
	        out.print(ret);
		 
		 
		 
		 
	 }
	 @RequestMapping(value={"pay.do"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
		public void crjPayment(HttpServletRequest request, HttpServletResponse response) throws Exception{
			Map<String, Object> map = new HashMap<String, Object>();
			String path = request.getContextPath();
			String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
//			System.out.println(basePath);
			//接收参数
			double amt = Double.parseDouble(request.getParameter("amt"));
			String payno = request.getParameter("payno");
//			String personName = URLDecoder.decode(request.getParameter("pername"),"UTF-8");
			String personName = request.getParameter("name");
			String phoneNum = request.getParameter("sjhm");
			//String settleDesc =  URLDecoder.decode(request.getParameter("servicename"),"UTF-8");//商品名称
//			String settleDesc =  request.getParameter("settleDesc");
//			settleDesc = URLEncoder.encode(settleDesc,"UTF-8");//商品名称
			String settleDesc ="测试商品";
			String payedurl = request.getParameter("payedurl");//
			String bizNo = request.getParameter("bizNo");//
			String ywbh = request.getParameter("ywbh");
			
			String catName ="出入境缴费";
			String catCode = "1170010";
			
			String code = "";
			String dateLong = String.valueOf(DataUtils.getInstance()
					.dateToDateTimeZoneLong(new Date()));
			
			try{
//				crjWxQzPayServiceI.insert(crjPay);//记录支付操作记录，点一次按钮记录一次
				CrjPaylog getcrjPayLog = crjWxQzPayServiceI.selectByBizNo(bizNo);
				if(getcrjPayLog==null){
					CrjPaylog crjPay = new CrjPaylog();
					crjPay.setId(UUID.getUID());
					crjPay.setBizNo(bizNo);
					crjPay.setAmt(amt);
					crjPay.setCatName(catName);
					crjPay.setCatCode(catCode);
					crjPay.setPayerName(personName);
					crjPay.setBizDate(dateLong.substring(0, dateLong.length() - 3));
					crjPay.setBizNo(bizNo);
					crjPay.setPaytime(new Date());
					crjPay.setPayerNo(payno);
					crjPay.setSettleDesc(settleDesc);
					crjPay.setPayerMobileNo(phoneNum);
					crjPay.setYwbh(ywbh);
					crjPay.setPayStatus("0");
//					crjPayWebService.savePay(map);
					crjWxQzPayServiceI.insert(crjPay);
				}else{
					
					crjWxQzPayServiceI.updateByPrimaryKey(getcrjPayLog);
				}
				code = "1";
				
			}catch(Exception e){
				System.out.println("数据库访问异常");
				code = "0";
			}
			String ret = "";
		    response.setCharacterEncoding("UTF-8");
		    response.setContentType("text/html");
		    PrintWriter out = response.getWriter();
		    BaseJson baseJson = new BaseJson();
             baseJson.setData(code);
	        
	        JsonConfig jsonConfig = new JsonConfig();
//	        jsonConfig.registerJsonValueProcessor(Date.class, new JsonDateValueProcessor());
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);

	        out = response.getWriter();
	        out.print(ret);
		 

		}
	 
	 /**
	 * @param response
	 * @param request
	 * @throws IOException
	 */
	@RequestMapping(value={"/getGaToken.do"}, method={org.springframework.web.bind.annotation.RequestMethod.POST})
	 public  void getGaToken(HttpServletResponse response, HttpServletRequest request)
			    throws IOException{
		    String ret = "";
		    response.setCharacterEncoding("UTF-8");
		    response.setContentType("text/html");
		    PrintWriter out = response.getWriter();
		    BaseJson baseJson = new BaseJson();
		 String token = request.getParameter("token");
		 Map reMap = new HashMap();
		 
//		 token = "ZzZnpoPTIyMjQwMzE5NzIwNTIwNjY0WCZ4eGNvbWU9MSZoa3N6ZHBjcz0yMjI0MDMzMTUmbmFtZT3ojaPoibPkuL0%3D";
		 //解密
		   BASE64Decoder decoder=new BASE64Decoder();
	        String urlend=new String(decoder.decodeBuffer(token),"utf-8");
	        String returnString=URLDecoder.decode(urlend,"utf-8");

//		 String urlencode=URLDecoder.decode(token,"utf-8");
//	        BASE64Decoder decoder=new BASE64Decoder();
//	        String returnString=new String(decoder.decodeBuffer(urlencode),"utf-8");
	        
	        baseJson.setCode("1");
	      reMap = URLRequest(returnString);
		     baseJson.setData(reMap);
	        JsonConfig jsonConfig = new JsonConfig();
	        JSONObject aa = JSONObject.fromObject(baseJson, jsonConfig);
	        ret = JSON.toJSONString(aa);
	        out = response.getWriter();
	        out.print(ret);
		 
		 
	 }


	 
//	
//		
			 public static Map<String, String> URLRequest(String data)
			    {
			    Map<String, String> mapRequest = new HashMap<String, String>();
			      String[] arrSplit=null;
			      //每个键值为一组 www.2cto.com
			    arrSplit=data.split("[&]");
			    for(String strSplit:arrSplit)
			    {
			          String[] arrSplitEqual=null;         
			          arrSplitEqual= strSplit.split("[=]");
			          
			          //解析出键值
			          if(arrSplitEqual.length>1)
			          {
			              //正确解析
			              mapRequest.put(arrSplitEqual[0], arrSplitEqual[1]);
			              
			          }
			          else
			          {
			              if(arrSplitEqual[0]!="")
			              {
			              //只有参数没有值，不加入
			              mapRequest.put(arrSplitEqual[0], "");       
			              }
			          }
			    }   
			    return mapRequest;   
			    }
			    
	  
	  
	 
	 public static void main(String[] args) throws IOException{
			
//		 
//		 String urlencode=URLDecoder.decode("b3BlbklkPW9kQV9Sc29kOHk5MGdidjJISFA1QklVOTRjYmsmc2pobT0xNzcxMjY4MjY1NiZzZnpoPTIyMjQwMzE5NzIwNTIwNjY0WCZ4eGNvbWU9MSZoa3N6ZHBjcz0yMjI0MDMzMTUmbmFtZT3ojaPoibPkuL0%3D","utf-8");
//	        BASE64Decoder decoder=new BASE64Decoder();
//	        String urlend=new String(decoder.decodeBuffer(urlencode),"utf-8");
//	        System.out.println(urlend);
		 String token ="b3BlbklkJTNEb2RBX1JzaU12UGx1Rkd6LXR0SHVKVTZoSGh6SSUyNnNqaG0lM0QxMzg0MzEyMzU4MSUyNnNmemglM0QyMjAxMDQxOTg0MDQyNDE1MjAlMjZ4eGNvbWUlM0QxJTI2aGtzemRwY3MlM0QyMjAxMDY2NjElMjZuYW1lJTNEJUU1JUFFJThCJUU1JUJFJUFFJUU1JUJFJUFF";
		 
//		 token = "{code=011NoP}";
		 BASE64Decoder decoder=new BASE64Decoder();
	        String urlend=new String(decoder.decodeBuffer(token),"utf-8");
	        String returnString=URLDecoder.decode(urlend,"utf-8");
	        System.out.println(returnString);
	 }

	
}
